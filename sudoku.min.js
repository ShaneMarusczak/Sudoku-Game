"use strict";(()=>{var runningTimer;const rows=9,cols=9,boardUI=document.getElementById("sudoku"),startBtn=document.getElementById("start"),startOverBtn=document.getElementById("startover"),checkAnswerButton=document.getElementById("checkAnswer"),timer=document.getElementById("timer"),completedPuzzlesOnLoad=Number(getCookie("completedSudokuPuzzles"));let seconds=0,minutes=0,hours=0;var board=[];const copiedBoard=[],answerBoard=[];let difficulty,solved=!1,gameStarted=!1,gameOver=!1;const difficultySettings={easy:1,hard:3,insane:5,medium:2};function setCookie(cname,cvalue,exdays){var d=new Date;d.setTime(d.getTime()+24*exdays*60*60*1e3);var expires="expires="+d.toUTCString();document.cookie=cname+"="+cvalue+";"+expires+";path=/"}function getCookie(cname){for(var name=cname+"=",decodedCookie,ca=decodeURIComponent(document.cookie).split(";"),i=0;i<ca.length;i++){for(var c=ca[i];" "==c.charAt(0);)c=c.substring(1);if(0==c.indexOf(name))return c.substring(name.length,c.length)}return""}const sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms)),alertModalControl=(message,duration)=>{document.getElementById("alertshader").classList.remove("hide"),document.getElementById("alertmessage").innerText=message,sleep(duration).then(()=>{document.getElementById("alertshader").classList.add("hide")})},timerTick=()=>{seconds++,seconds>=60&&(seconds=0,minutes++,minutes>=60&&(minutes=0,hours++)),timer.textContent=(hours?hours>9?hours:"0"+hours:"00")+":"+(minutes?minutes>9?minutes:"0"+minutes:"00")+":"+(seconds>9?seconds:"0"+seconds),timerStart()},timerStart=()=>{runningTimer=setTimeout(timerTick,1e3)},randomIntFromInterval=(min,max)=>Math.floor(Math.random()*(max-min+1)+min),selectedRadioBtnForForm=formName=>Array.from(document.getElementsByName(formName)).find(input=>"radio"===input.type&&input.checked),start=()=>{if(!gameStarted)if(Array.from(document.getElementsByName("difficulty")).some(elem=>elem.checked)){difficulty=selectedRadioBtnForForm("difficulty"),generateRandomBoard();for(let y=0;y<9;y++)for(let x=0;x<9;x++)document.getElementById("s"+y+x).readOnly=!1,0===randomIntFromInterval(0,difficultySettings[difficulty.value])?(document.getElementById("s"+y+x).value=copiedBoard[y][x],document.getElementById("s"+y+x).readOnly=!0):document.getElementById("no"+y+x).classList.remove("hide");gameStarted=!0,displayControl()}else alertModalControl("Please select a difficulty.",1500)},displayControl=()=>{document.getElementById("usedNums").classList.remove("hide"),document.getElementById("difficultySelect").classList.add("hide"),document.getElementById("introText").classList.add("hide"),timer.classList.remove("hide"),timerStart()},checkAnswer=()=>{if(gameStarted&&!gameOver)if(validate()){for(let y=0;y<9;y++)for(let x=0;x<9;x++)answerBoard[y][x]=document.getElementById("s"+y+x).value;validBoard(answerBoard)?(document.getElementById("completedPuzzles").innerText="Completed Puzzles: "+(completedPuzzlesOnLoad+1),setCookie("completedSudokuPuzzles",completedPuzzlesOnLoad+1,10),clearTimeout(runningTimer),alertModalControl("Correct!",2500),sleep(1500).then(()=>alertModalControl("You finished in "+timer.textContent,3e3)),boardtoGreen(),gameOver=!0):alertModalControl("Sorry, incorrect!",1500)}else alertModalControl("Not all entries are valid!",1500)},boardtoGreen=()=>{for(let y=0;y<9;y++)for(let x=0;x<9;x++)document.getElementById("s"+y+x).style.background="darkseagreen"},validate=()=>{const validValues=["1","2","3","4","5","6","7","8","9"];for(let y=0;y<9;y++)for(let x=0;x<9;x++)if(!validValues.includes(document.getElementById("s"+y+x).value))return!1;return!0},validBoard=board=>{for(let y=0;y<9;y++)for(let x=0;x<9;x++)if(!possible(y,x,board[y][x],board,!0))return!1;return!0},solve=copyTo=>{if(!solved){for(let y=0;y<9;y++)for(let x=0;x<9;x++)if(""==board[y][x]){for(let n=1;n<10;n++){if(solved)return;possible(y,x,n,board,!1)&&(board[y][x]=n,solve(copyTo),board[y][x]="")}return}solved=!0,copyBoard(board,copyTo)}},copyBoard=(boardFrom,boardTo)=>{for(let y=0;y<9;y++)for(let x=0;x<9;x++)boardTo[y][x]=boardFrom[y][x]},possible=(y,x,n,boardArg,checkingMode)=>{for(let i=0;i<9;i++)if(boardArg[y][i]==n){if(i==x&&checkingMode)continue;return!1}for(let i=0;i<9;i++)if(boardArg[i][x]==n){if(i==y&&checkingMode)continue;return!1}const x0=3*Math.floor(x/3),y0=3*Math.floor(y/3);for(let i=0;i<3;i++)for(let j=0;j<3;j++)if(boardArg[y0+i][x0+j]==n){if(y0+i==y&&x0+j==x&&checkingMode)continue;return!1}return!0},generateRandomBoard=()=>{board[0][0]=randomIntFromInterval(1,9),board[1][7]=randomIntFromInterval(1,9),board[2][4]=randomIntFromInterval(1,9),board[3][3]=randomIntFromInterval(1,9),board[4][1]=randomIntFromInterval(1,9),board[5][8]=randomIntFromInterval(1,9),board[6][6]=randomIntFromInterval(1,9),board[7][2]=randomIntFromInterval(1,9),board[8][5]=randomIntFromInterval(1,9),solve(copiedBoard)},noteDisplayHandler=e=>{const noteElem=document.getElementById("n"+e.target.id.substring(2));noteElem.classList.contains("hide")&&gameStarted&&!0!==document.getElementById("s"+e.target.id.substring(2)).readOnly?(noteElem.classList.remove("hide"),document.getElementById("no"+e.target.id.substring(2)).innerHTML="«"):(noteElem.classList.add("hide"),document.getElementById("no"+e.target.id.substring(2)).innerHTML="»")},hideNotes=e=>{"TEXTAREA"!==e.target.tagName&&"INPUT"!==e.target.tagName&&"SPAN"!==e.target.tagName&&(Array.from(document.getElementsByTagName("textarea")).forEach(elem=>elem.classList.add("hide")),Array.from(document.getElementsByTagName("span")).forEach(elem=>{"alertmessage"!==elem.id&&(elem.innerHTML="»")}))},noteOpenButtonShow=e=>{gameStarted&&"SPAN"!==e.target.tagName&&"DIV"!==e.target.tagName&&!0!==document.getElementById("s"+e.target.id.substring(1)).readOnly&&document.getElementById("no"+e.target.id.substring(1)).classList.add("opaque")},noteOpenButtonHide=e=>{document.getElementById("no"+e.target.id.substring(2)).classList.remove("opaque")},numsUsed=()=>{const numsDict={1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0};for(let y=0;y<9;y++)for(let x=0;x<9;x++)numsDict[document.getElementById("s"+y+x).value]++;for(let i=1;i<10;i++)numsDict[i.toString()]>=9?document.getElementById("used"+i).classList.remove("hide"):document.getElementById("used"+i).classList.add("hide")};(()=>{startBtn.addEventListener("click",start),checkAnswerButton.addEventListener("click",checkAnswer),startOverBtn.addEventListener("click",()=>location.reload()),document.addEventListener("click",hideNotes);for(let i=0;i<9;i++){board.push([]),copiedBoard.push([]),answerBoard.push([]);const entryRow=document.createElement("div");entryRow.classList.add("entryRow"),boardUI.appendChild(entryRow);for(let j=0;j<9;j++){answerBoard[i][j]="",board[i][j]="",copiedBoard[i][j]="";const entryDiv=document.createElement("div"),entry=document.createElement("input"),note=document.createElement("textarea"),noteOpen=document.createElement("span"),noteOpenDiv=document.createElement("div");noteOpen.innerHTML="»",noteOpen.classList.add("hide"),note.classList.add("hide"),entryDiv.id="ed"+i+j,note.id="n"+i+j,entry.id="s"+i+j,noteOpen.id="no"+i+j,entry.readOnly=!0,entry.type="text",entry.addEventListener("focusout",numsUsed),entryDiv.classList.add("entryDiv"),noteOpenDiv.classList.add("noteOpenDiv"),entryDiv.addEventListener("mouseover",noteOpenButtonShow),entryDiv.addEventListener("mouseleave",noteOpenButtonHide),entryDiv.appendChild(entry),entryDiv.appendChild(note),noteOpenDiv.appendChild(noteOpen),entryDiv.appendChild(noteOpenDiv),noteOpen.addEventListener("click",noteDisplayHandler),entryRow.appendChild(entryDiv),2===j||5===j?(entry.classList.add("rightBorder"),entryDiv.classList.add("strangeRight")):entryDiv.classList.add("oddRight"),2!==i&&5!==i||entry.classList.add("bottomBorder")}}document.getElementById("completedPuzzles").innerText="Completed Puzzles: "+completedPuzzlesOnLoad})()})();